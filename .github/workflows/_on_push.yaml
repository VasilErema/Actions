name: Push verification

on:
  push:
    branches:
      - '*' # Trigger on any branch
  workflow_dispatch:

jobs:
  verify_installation_job:
    name: Verify if we can istall Gems
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install bundle
        run: |
          bundle config unset deployment
          bundle install

      - name: Run All tests
        run: |
          echo 'TODO: Run all tests'
          echo "SHOULD_SKIP=${{ env.SHOULD_SKIP }}"

      - name: Gather all commits
        id: gather_commits
        run: |
          # Ensure the main branch is fetched
          git fetch origin main

          # Get the current branch name
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

          # Collect all commits from the branch
          COMMITS=$(git log origin/main..HEAD --pretty=format:"- %h %s")

          # Export environment variables for use in later steps
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV
          echo -e "commits=$COMMITS" >> $GITHUB_ENV

      - name: Debug commits
        run: echo "${{ env.commits }}"

      - name: Create or Update Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_TITLE="PR for branch: ${{ env.branch_name }}"
          PR_BODY="### All commits:\n${{ env.commits }}"

          # Check if a PR already exists for this branch
          EXISTING_PR=$(gh pr list --state open --head "${{ env.branch_name }}" --json url --jq '.[0].url')

          if [ -z "$EXISTING_PR" ]; then
            # No PR exists; create a new one
            gh pr create --base main --head "${{ env.branch_name }}" --title "$PR_TITLE" --body "$(echo -e "$PR_BODY")"
          else
            # PR exists; update the PR description
            gh pr edit "$EXISTING_PR" --body "$(echo -e "$PR_BODY")"
          fi
